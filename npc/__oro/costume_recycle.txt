// https://irowiki.org/wiki/Ben_Recycle

-	shop	costume_recycle_shop#iro	-1,909:-1

turbo_room,74,97,4	script	Costume Gear Recycle#iro	10033,{
	function func_GetItemName;
	function func_AddItem;
	
	mes "Hi, I can convert certain equipment into ores.";
	mes "Would you give it a try?";
	next;
	if (select("Convert", "Information") == 2) {
		for (.@i = 0; .@i < .size; .@i++) {
			mes func_GetItemName(.nameid[.@i]);
			if (.amount1[.@i] > 0 && .nameid1[.@i] > 0)
				mes " ~ "+F_InsertComma(.amount1[.@i])+"x "+func_GetItemName(.nameid1[.@i]);
			if (.amount2[.@i] > 0 && .nameid2[.@i] > 0)
				mes " ~ "+F_InsertComma(.amount2[.@i])+"x "+func_GetItemName(.nameid2[.@i]);
			mes " ";
		}
		next;
	}
	if (.shop_npc$ != "") {
		mes "Place all the equipments you wish to convert into ores.";
		close2;
		npcshopattach .shop_npc$, 1;
		callshop .shop_npc$, 2;
		end;
	}
	else {
		for (.@i = 0; .@i < .size; .@i++)
			.@menu$ = .@menu$ + func_GetItemName(.nameid[.@i]) + ":";
		.@i = select(.@menu$) - 1;
		if (countitem(.nameid[.@i])) {
			delitem .nameid[.@i], 1;
			mes "Exchanged "+func_GetItemName(.nameid[.@i])+":";
			if (.nameid1[.@i] > 0 && .amount1[.@i] > 0) {
				mes " ~ "+F_InsertComma(.amount1[.@i])+"x "+func_GetItemName(.nameid1[.@i]);
				getitem .nameid1[.@i], .amount1[.@i];
			}
			if (.nameid2[.@i] > 0 && .amount2[.@i] > 0) {
				mes " ~ "+F_InsertComma(.amount2[.@i])+"x "+func_GetItemName(.nameid2[.@i]);
				getitem .nameid2[.@i], .amount2[.@i];
			}
		}
		else {
			mes "you dont have "+func_GetItemName(.nameid[.@i]);
		}
	}
	close;
	
	OnSellItem:
		.@sold_nameid_size = getarraysize(@sold_nameid);
		for (.@i = 0; .@i < .@sold_nameid_size && !.@fail; .@i++) {
			for (.@x = 0; .@x < .size && !.@fail; .@x++) {
				if (.nameid[.@x] == @sold_nameid[.@i]) {
					if (!checkweight(.nameid1[.@x], .amount1[.@x])) {
						mes "Exchange stopped, you're overweight.";
						.@fail++;
					}
					else {
						.@total++;
						delitem2(@sold_nameid[.@i], @sold_quantity[.@i], @sold_identify[.@i], @sold_refine[.@i], @sold_attribute[.@i], @sold_card1[.@i], @sold_card2[.@i], @sold_card3[.@i], @sold_card4[.@i]);
						mes "Exchanged "+func_GetItemName(.nameid[.@x])+":";
						if (.nameid1[.@x] > 0 && .amount1[.@x] > 0) {
							mes " ~ "+F_InsertComma(.amount1[.@x])+"x "+func_GetItemName(.nameid1[.@x]);
							getitem .nameid1[.@x], .amount1[.@x];
						}
						if (.nameid2[.@x] > 0 && .amount2[.@x] > 0) {
							mes " ~ "+F_InsertComma(.amount2[.@x])+"x "+func_GetItemName(.nameid2[.@x]);
							getitem .nameid2[.@x], .amount2[.@x];
						}
						mes " ";
					}
				}
			}
			if (.@i && .@i % 10 == 0) sleep2 1;
		}
		mes "Exchanged "+.@total+" item(s).";
		close2;
		npcshopattach .shop_npc$, 0;
		end;
	
	function	func_GetItemName	{
		.@itemid = getarg(0, 0);
		.@itemslot = getitemslots(.@itemid);
		.@item_name$ = getitemname(.@itemid);
		.@itemtype = getiteminfo(.@itemid, 2);
		if (.@itemslot || .@itemtype == IT_WEAPON || .@itemtype == IT_ARMOR)
			.@item_name$ = .@item_name$ + " ["+.@itemslot+"]";
		return .@item_name$;
	}
	
	function	func_AddItem	{
		.@nameid = getarg(0, 0);
		.@nameid1 = getarg(1, 0);
		.@amount1 = getarg(2, 0);
		.@nameid2 = getarg(3, 0);
		.@amount2 = getarg(4, 0);
		
		if (.@nameid > 0 
			&& .@nameid1 > 0 && .@amount1 > 0
			&& .@nameid2 > 0 && .@amount2 > 0 
		) {
			.nameid[.size] = .@nameid;
			.nameid1[.size] = .@nameid1;
			.amount1[.size] = .@amount1;
			.nameid2[.size] = .@nameid2;
			.amount2[.size] = .@amount2;
			.size++;
		}
	}
	
	OnInit:
		// if enable shop UI (only work if items can sell to npc shop)
		.shop_npc$ = "costume_recycle_shop#iro";
		
		// func_AddItem(<equipment_id>, <item1>, <amount1>, <item2>, <amount2>);
		
		// WEAPONS
func_AddItem(19433, 6153, 1, 7126, 1);
func_AddItem(19500, 6153, 1, 7126, 1);
func_AddItem(19501, 6153, 1, 7126, 1);
func_AddItem(19502, 6153, 1, 7126, 1);
func_AddItem(19503, 6153, 1, 7126, 1);
func_AddItem(19504, 6153, 1, 7126, 1);
func_AddItem(19505, 6153, 1, 7126, 1);
func_AddItem(19506, 6153, 1, 7126, 1);
func_AddItem(19507, 6153, 1, 7126, 1);
func_AddItem(19508, 6153, 1, 7126, 1);
func_AddItem(19509, 6153, 1, 7126, 1);
func_AddItem(19510, 6153, 1, 7126, 1);
func_AddItem(19511, 6153, 1, 7126, 1);
func_AddItem(19512, 6153, 1, 7126, 1);
func_AddItem(19513, 6153, 1, 7126, 1);
func_AddItem(19514, 6153, 1, 7126, 1);
func_AddItem(19515, 6153, 1, 7126, 1);
func_AddItem(19516, 6153, 1, 7126, 1);
func_AddItem(19517, 6153, 1, 7126, 1);
func_AddItem(19518, 6153, 1, 7126, 1);
func_AddItem(19519, 6153, 1, 7126, 1);
func_AddItem(19520, 6153, 1, 7126, 1);
func_AddItem(19521, 6153, 1, 7126, 1);
func_AddItem(19522, 6153, 1, 7126, 1);
func_AddItem(19523, 6153, 1, 7126, 1);
func_AddItem(19524, 6153, 1, 7126, 1);
func_AddItem(19525, 6153, 1, 7126, 1);
func_AddItem(19526, 6153, 1, 7126, 1);
func_AddItem(19527, 6153, 1, 7126, 1);
func_AddItem(19528, 6153, 1, 7126, 1);
func_AddItem(19529, 6153, 1, 7126, 1);
func_AddItem(19530, 6153, 1, 7126, 1);
func_AddItem(19531, 6153, 1, 7126, 1);
func_AddItem(19532, 6153, 1, 7126, 1);
func_AddItem(19533, 6153, 1, 7126, 1);
func_AddItem(19534, 6153, 1, 7126, 1);
func_AddItem(19535, 6153, 1, 7126, 1);
func_AddItem(19536, 6153, 1, 7126, 1);
func_AddItem(19537, 6153, 1, 7126, 1);
func_AddItem(19538, 6153, 1, 7126, 1);
func_AddItem(19540, 6153, 1, 7126, 1);
func_AddItem(19542, 6153, 1, 7126, 1);
func_AddItem(19543, 6153, 1, 7126, 1);
func_AddItem(19544, 6153, 1, 7126, 1);
func_AddItem(19545, 6153, 1, 7126, 1);
func_AddItem(19546, 6153, 1, 7126, 1);
func_AddItem(19547, 6153, 1, 7126, 1);
func_AddItem(19548, 6153, 1, 7126, 1);
func_AddItem(19549, 6153, 1, 7126, 1);
func_AddItem(19550, 6153, 1, 7126, 1);
func_AddItem(19551, 6153, 1, 7126, 1);
func_AddItem(19552, 6153, 1, 7126, 1);
func_AddItem(19553, 6153, 1, 7126, 1);
func_AddItem(19554, 6153, 1, 7126, 1);
func_AddItem(19555, 6153, 1, 7126, 1);
func_AddItem(19556, 6153, 1, 7126, 1);
func_AddItem(19557, 6153, 1, 7126, 1);
func_AddItem(19558, 6153, 1, 7126, 1);
func_AddItem(19559, 6153, 1, 7126, 1);
func_AddItem(19560, 6153, 1, 7126, 1);
func_AddItem(19561, 6153, 1, 7126, 1);
func_AddItem(19562, 6153, 1, 7126, 1);
func_AddItem(19563, 6153, 1, 7126, 1);
func_AddItem(19564, 6153, 1, 7126, 1);
func_AddItem(19565, 6153, 1, 7126, 1);
func_AddItem(19566, 6153, 1, 7126, 1);
func_AddItem(19567, 6153, 1, 7126, 1);
func_AddItem(19568, 6153, 1, 7126, 1);
func_AddItem(19569, 6153, 1, 7126, 1);
func_AddItem(19570, 6153, 1, 7126, 1);
func_AddItem(19571, 6153, 1, 7126, 1);
func_AddItem(19572, 6153, 1, 7126, 1);
func_AddItem(19573, 6153, 1, 7126, 1);
func_AddItem(19574, 6153, 1, 7126, 1);
func_AddItem(19575, 6153, 1, 7126, 1);
func_AddItem(19576, 6153, 1, 7126, 1);
func_AddItem(19577, 6153, 1, 7126, 1);
func_AddItem(19578, 6153, 1, 7126, 1);
func_AddItem(19579, 6153, 1, 7126, 1);
func_AddItem(19580, 6153, 1, 7126, 1);
func_AddItem(19581, 6153, 1, 7126, 1);
func_AddItem(19582, 6153, 1, 7126, 1);
func_AddItem(19583, 6153, 1, 7126, 1);
func_AddItem(19584, 6153, 1, 7126, 1);
func_AddItem(19585, 6153, 1, 7126, 1);
func_AddItem(19586, 6153, 1, 7126, 1);
func_AddItem(19587, 6153, 1, 7126, 1);
func_AddItem(19588, 6153, 1, 7126, 1);
func_AddItem(19589, 6153, 1, 7126, 1);
func_AddItem(19590, 6153, 1, 7126, 1);
func_AddItem(19591, 6153, 1, 7126, 1);
func_AddItem(19592, 6153, 1, 7126, 1);
func_AddItem(19593, 6153, 1, 7126, 1);
func_AddItem(19594, 6153, 1, 7126, 1);
func_AddItem(19595, 6153, 1, 7126, 1);
func_AddItem(19596, 6153, 1, 7126, 1);
func_AddItem(19597, 6153, 1, 7126, 1);
func_AddItem(19598, 6153, 1, 7126, 1);
func_AddItem(19599, 6153, 1, 7126, 1);
func_AddItem(19600, 6153, 1, 7126, 1);
func_AddItem(19601, 6153, 1, 7126, 1);

		end;
}